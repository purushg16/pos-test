{
  "version": 3,
  "sources": ["../../@capacitor-community/speech-recognition/src/web.ts"],
  "sourcesContent": ["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  PermissionStatus,\n  SpeechRecognitionPlugin,\n  UtteranceOptions,\n} from './definitions';\n\nexport class SpeechRecognitionWeb\n  extends WebPlugin\n  implements SpeechRecognitionPlugin\n{\n  available(): Promise<{ available: boolean }> {\n    throw this.unimplemented('Method not implemented on web.');\n  }\n  start(_options?: UtteranceOptions): Promise<{ matches?: string[] }> {\n    throw this.unimplemented('Method not implemented on web.');\n  }\n  stop(): Promise<void> {\n    throw this.unimplemented('Method not implemented on web.');\n  }\n  getSupportedLanguages(): Promise<{ languages: any[] }> {\n    throw this.unimplemented('Method not implemented on web.');\n  }\n  hasPermission(): Promise<{ permission: boolean }> {\n    throw this.unimplemented('Method not implemented on web.');\n  }\n  isListening(): Promise<{ listening: boolean }> {\n    throw this.unimplemented('Method not implemented on web.');\n  }\n  requestPermission(): Promise<void> {\n    throw this.unimplemented('Method not implemented on web.');\n  }\n  checkPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Method not implemented on web.');\n  }\n  requestPermissions(): Promise<PermissionStatus> {\n    throw this.unimplemented('Method not implemented on web.');\n  }\n}\n\nconst SpeechRecognition = new SpeechRecognitionWeb();\n\nexport { SpeechRecognition };\n"],
  "mappings": ";;;;;;AAQM,IAAO,uBAAP,cACI,UAAS;EAGjB,YAAS;AACP,UAAM,KAAK,cAAc,gCAAgC;EAC3D;EACA,MAAM,UAA2B;AAC/B,UAAM,KAAK,cAAc,gCAAgC;EAC3D;EACA,OAAI;AACF,UAAM,KAAK,cAAc,gCAAgC;EAC3D;EACA,wBAAqB;AACnB,UAAM,KAAK,cAAc,gCAAgC;EAC3D;EACA,gBAAa;AACX,UAAM,KAAK,cAAc,gCAAgC;EAC3D;EACA,cAAW;AACT,UAAM,KAAK,cAAc,gCAAgC;EAC3D;EACA,oBAAiB;AACf,UAAM,KAAK,cAAc,gCAAgC;EAC3D;EACA,mBAAgB;AACd,UAAM,KAAK,cAAc,gCAAgC;EAC3D;EACA,qBAAkB;AAChB,UAAM,KAAK,cAAc,gCAAgC;EAC3D;;AAGF,IAAM,oBAAoB,IAAI,qBAAoB;",
  "names": []
}
